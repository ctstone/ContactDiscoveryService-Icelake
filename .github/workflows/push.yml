name: Build and push Docker image

on:
  release:
    types: [published]

env:
  DOCKER_BUILD_ARGS: --cache-from type=gha --cache-to type=gha
  DOCKER_BUILDKIT: 1
  BUILDX_CONTAINER: container

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-22.04
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout

    steps:
      - name: Checkout main project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive

      - name: Expose Docker environmental variables for gha cache
        # This action takes in the ID tokens etc provided by the permissions,
        # as well as some environmental data, and exposes them to future steps
        # in the correct locations and formats for their use with the `gha`
        # GitHub Actions cache for Docker.
        uses: crazy-max/ghaction-github-runtime@b3a9207c0e1ef41f4cf215303c976869d0c2c1c4 # v3.0.0

      - name: Setup Docker
        run: docker buildx create --use --name container --driver docker-container

      - name: Set up JDK 21
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'maven'

      - name: 'Az CLI login'
        uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # Azure Login Action v2.2.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Docker login'
        run:
          az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY_NAME }}

      - name: Set up necessary SGX stuff
        run: sudo ./c/docker/sgx_runtime_libraries.sh

      - name: Build and push container image
        run: |
          ./mvnw -e -B deploy \
            -P-build-dev-enclave \
            -Dpackaging=docker \
            -Djib.to.image="${{ secrets.REGISTRY_LOGIN_SERVER }}/cdsi:${GITHUB_REF_NAME}"
